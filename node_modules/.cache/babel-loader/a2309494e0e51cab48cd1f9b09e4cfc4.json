{"ast":null,"code":"var _jsxFileName = \"/Users/jo/Desktop/netflix/src/routes/Home.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Movie from \"../components/Movie.js\";\nimport Navigation from \"../components/Navigation.js\";\nimport \"./Home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      movies: [],\n      userInput: ''\n    };\n\n    this.handleInput = e => {\n      this.setState({\n        userInput: e.target.value\n      });\n    };\n\n    this.getMovies = async () => {\n      const {\n        data: {\n          data: {\n            movies\n          }\n        }\n      } = await axios.get(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\");\n      this.setState({\n        movies: movies,\n        isLoading: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const {\n      handleInput\n    } = this;\n    const {\n      isLoading,\n      movies,\n      userInput\n    } = this.state;\n    const filteredMovie = movies.filter(movies => {\n      return movies.title.toLowerCase().includes(userInput);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"loader-loading\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this) : filteredMovie.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movies\",\n        children: /*#__PURE__*/_jsxDEV(Movie, {\n          title: movie.title,\n          poster: movie.medium_cover_image,\n          year: movie.year,\n          summary: movie.summary,\n          genres: movie.genres\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jo/Desktop/netflix/src/routes/Home.js"],"names":["React","Component","axios","Movie","Navigation","App","state","isLoading","movies","userInput","handleInput","e","setState","target","value","getMovies","data","get","componentDidMount","render","filteredMovie","filter","title","toLowerCase","includes","map","movie","medium_cover_image","year","summary","genres","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAO,YAAP;;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA2B;AAAA;AAAA;AAAA,SACvBK,KADuB,GACjB;AACFC,MAAAA,SAAS,EAAC,IADR;AAEFC,MAAAA,MAAM,EAAC,EAFL;AAGFC,MAAAA,SAAS,EAAC;AAHR,KADiB;;AAAA,SAOvBC,WAPuB,GAORC,CAAD,IAAO;AACjB,WAAKC,QAAL,CAAc;AACVH,QAAAA,SAAS,EAAEE,CAAC,CAACE,MAAF,CAASC;AADV,OAAd;AAGH,KAXsB;;AAAA,SAavBC,SAbuB,GAaX,YAAY;AACpB,YAAM;AAACC,QAAAA,IAAI,EAAC;AAACA,UAAAA,IAAI,EAAC;AAACR,YAAAA;AAAD;AAAN;AAAN,UAAyB,MAAMN,KAAK,CAACe,GAAN,CAAU,uEAAV,CAArC;AACA,WAAKL,QAAL,CAAc;AAACJ,QAAAA,MAAM,EAACA,MAAR;AAAeD,QAAAA,SAAS,EAAC;AAAzB,OAAd;AACH,KAhBsB;AAAA;;AAiBvBW,EAAAA,iBAAiB,GAAE;AACf,SAAKH,SAAL;AACH;;AAEDI,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACT,MAAAA;AAAD,QAAgB,IAAtB;AACA,UAAM;AAACH,MAAAA,SAAD;AAAWC,MAAAA,MAAX;AAAkBC,MAAAA;AAAlB,QAA+B,KAAKH,KAA1C;AACA,UAAMc,aAAa,GAAGZ,MAAM,CAACa,MAAP,CAAeb,MAAD,IAAY;AAC5C,aAAOA,MAAM,CAACc,KAAP,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCf,SAApC,CAAP;AACH,KAFqB,CAAtB;AAGA,wBACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACKF,SAAS,gBAEV;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACI;AAAM,UAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFU,GAMNa,aAAa,CAACK,GAAd,CAAkBC,KAAK,iBACvB;AAAoB,QAAA,SAAS,EAAC,QAA9B;AAAA,+BACI,QAAC,KAAD;AACI,UAAA,KAAK,EAAEA,KAAK,CAACJ,KADjB;AAEI,UAAA,MAAM,EAAEI,KAAK,CAACC,kBAFlB;AAGI,UAAA,IAAI,EAAED,KAAK,CAACE,IAHhB;AAII,UAAA,OAAO,EAAEF,KAAK,CAACG,OAJnB;AAKI,UAAA,MAAM,EAAEH,KAAK,CAACI;AALlB;AAAA;AAAA;AAAA;AAAA;AADJ,SAAUJ,KAAK,CAACK,EAAhB;AAAA;AAAA;AAAA;AAAA,cADA;AAPR;AAAA;AAAA;AAAA;AAAA,YADA;AAuBH;;AAlDsB;;AAqD3B,eAAe1B,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Movie from \"../components/Movie.js\";\nimport Navigation from \"../components/Navigation.js\";\nimport \"./Home.css\";\n\nclass App extends Component{\n    state={\n        isLoading:true,\n        movies:[],\n        userInput:''\n    };\n\n    handleInput = (e) => {\n        this.setState({\n            userInput: e.target.value\n        })\n    }\n\n    getMovies = async () => {\n        const {data:{data:{movies}}} = await axios.get(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\");\n        this.setState({movies:movies,isLoading:false});\n    }\n    componentDidMount(){\n        this.getMovies();\n    }\n\n    render(){\n        const {handleInput} = this;\n        const {isLoading,movies,userInput} = this.state;\n        const filteredMovie = movies.filter((movies) => {\n            return movies.title.toLowerCase().includes(userInput);\n        })\n        return (\n        <div className=\"container\">\n            {isLoading \n            ? \n            <div className=\"loader\">\n                <span className=\"loader-loading\">Loading...</span>\n            </div> \n            :   (\n                filteredMovie.map(movie => (\n                <div key={movie.id} className=\"movies\">\n                    <Movie \n                        title={movie.title}\n                        poster={movie.medium_cover_image}\n                        year={movie.year}\n                        summary={movie.summary}\n                        genres={movie.genres}\n                    />\n                </div>\n                ))\n            )\n            }\n        </div>\n        )\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}